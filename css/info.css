



main {
   z-index: 1;
   position: relative;

   padding: var(--XL-spacer) var(--page-margin);
}


canvas {
   position: fixed;
   z-index: 99;
   pointer-events: none;
}
 







.me {
   padding-bottom: var(--L-spacer);

   position: relative;

   display: grid;
   
   grid-template-columns: repeat(4, 1fr);
}

.me h2 {
   padding-bottom: var(--XS-spacer);
}

.me figure {
   padding-bottom: var(--XS-spacer);

   grid-column: 1 / span 4;
   justify-self: end;

   overflow: hidden;
   border-radius: 0.5rem;
}

.me figure img {
}


.me figcaption {
   display: flex;
   flex-direction: column;

   gap: 5rem;

   font-family: var(--font);
   font-size: clamp(4rem, 5vw, 8rem);

   grid-column: 1 / span 12;
}

.me figcaption p:first-of-type {
   font-size: clamp(4rem, 5vw, 8rem);
}

.me figcaption p {
   font-size: 2rem;
   grid-column: 1 / span 12;
}

.me figcaption p:nth-of-type(2), figcaption p:nth-of-type(3), figcaption p:nth-of-type(4) {
   grid-column: 5 / span 8;
}






.honours {
   padding-bottom: var(--L-spacer);

   position: relative;
   
   width: 100%;
   height: 100%;
}

.honours .grid {
   display: flex;
   flex-direction: column;

   height: 100rem;
}

.honours .grid .row {
   display: flex;

   flex-direction: column;

   height: 100%;
}

.honours .grid .row a {
   position: relative;

   height: 100%;
   border-top: 0.1rem solid var(--border-color);
   cursor: pointer;
   flex: 1;
   will-change: flex;
   display: flex;
   overflow: hidden;
}

.honours .grid .row a h4, .row a p {
   position: absolute;

   font-family: var(--body-font)
}

.honours .grid .row a h4 {
   top: var(--S-spacer);
   left: var(--S-spacer);

   font-size: 2rem;
}

.honours .grid .row a p {
   font-size: 1.6rem;
}

.honours .grid .row a p:nth-of-type(1) {
   top: var(--S-spacer);
   right: var(--S-spacer);
}

.honours .grid .row a p:nth-of-type(2) {
   bottom: var(--S-spacer);
   left: var(--S-spacer);
}

.honours .grid .row a p:nth-of-type(2) span {
   display: block;
}

.honours .grid .row a p:nth-of-type(3) {
   right: var(--S-spacer);
   bottom: var(--S-spacer);
}

.honours .grid .row a p:nth-of-type(3)::after {
   content: 'Detail';
}


.honours .grid .row:last-of-type {
   border-bottom: 0.1rem solid var(--border-color);
}

.honours .grid .row a:last-of-type {
   border-right: none;
}

.project-image {
   opacity: 0%;
   position: absolute;
   top: -100%;
   pointer-events: none;
   user-select: none;

   width: 40rem;
   height: auto;

   border-radius: var(--border-radius);
 }








.work {
   padding-bottom: var(--L-spacer);
   
}

.education {
   padding-bottom: var(--L-spacer);
}

.exhibition {
}


h3 {
   padding-bottom: var(--S-spacer);
}

h4 {
   padding-bottom: var(--S-spacer);
}

table {
   table-layout: fixed;

   width: 100%;
 }

 table td {
   padding: var(--XS-spacer) 0;

   font-family: var(--font);
   font-size: 1.6rem;

   border-bottom:  0.1rem solid var(--border-color);
 }








 









 /* Groter dan Mobiel */
@media screen and (min-width: 688px) {

   .me {
      padding-bottom: var(--L-spacer);
   
      position: relative;
      display: grid;
   
      grid-template-columns: repeat(12, 1fr);
   }
   
   .me h3 {
   }


   .me figure {
      padding-bottom: var(--XS-spacer);
   
      grid-column: 7 / span 6;
      justify-self: end;
   
      display: flex;
   
      overflow: hidden;
      border-radius: 0.5rem;
   }

   .me figcaption {
      display: grid;
   
      grid-template-columns: repeat(12, 1fr);
      grid-column-gap: 1rem;
   
      gap: 5rem;
   
      font-family: var(--font);
      font-size: clamp(4rem, 5vw, 8rem);
   
      grid-column: 1 / span 12;
   }
   
   .me figcaption p:first-of-type {
      font-size: clamp(4rem, 5vw, 8rem);
   }
   
   .me figcaption p {
      font-size: clamp(2rem, 3vw, 4rem);
      grid-column: 1 / span 12;
   }
   
   .me figcaption p:nth-of-type(2), figcaption p:nth-of-type(3), figcaption p:nth-of-type(4) {
      grid-column: 5 / span 8;
   }



   .honours .grid {
      display: flex;
      flex-direction: column;
   
      height: 30vw;
   }
   
   .honours .grid .row {
      display: flex;
      flex-direction: row;
      height: 100%;
   }
   
   .honours .grid .row a {
      position: relative;
   
      height: 100%;
      border-top: 0.1rem solid var(--border-color);
      border-right: 0.1rem solid var(--border-color);
      cursor: pointer;
      flex: 1;
      will-change: flex;
      display: flex;
      overflow: hidden;
   }






 .work {
   padding-bottom: var(--XL-spacer);
}

.education {
   padding-bottom: var(--XL-spacer);
}


}


/* Groter dan Tablet */
 @media screen and (min-width: 992px) {

   .me {
      padding-bottom: var(--XL-spacer);
   }

   /* body {
      background-color: red;
   } */

 }







/* Groter dan Desktop */
 @media screen and (min-width: 1312px) {
/* 
   body {
      background-color: red;
   } */


 }



